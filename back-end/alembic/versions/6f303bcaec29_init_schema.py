"""init schema

Revision ID: 6f303bcaec29
Revises: 
Create Date: 2025-10-18 02:22:23.086520

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6f303bcaec29'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('account',
    sa.Column('email', sa.VARCHAR(length=255), nullable=False),
    sa.Column('password', sa.Text(), nullable=True),
    sa.Column('role', sa.Enum('ADMIN', 'COMPANY_OWNER', 'UNIVERSITY_ADMIN', name='role_enum', native_enum=False), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_account')),
    sa.UniqueConstraint('email', name=op.f('uq_account_email'))
    )
    op.create_table('contacts',
    sa.Column('phone', sa.VARCHAR(), nullable=True),
    sa.Column('email', sa.VARCHAR(), nullable=True),
    sa.Column('other', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_contacts'))
    )
    op.create_table('company',
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('owner_fk', sa.Integer(), nullable=True),
    sa.Column('logo', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('contacts_fk', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['contacts_fk'], ['contacts.id'], name=op.f('fk_company_contacts_fk_contacts'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['owner_fk'], ['account.id'], name=op.f('fk_company_owner_fk_account'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_company'))
    )
    op.create_index(op.f('ix_company_contacts_fk'), 'company', ['contacts_fk'], unique=True)
    op.create_index(op.f('ix_company_owner_fk'), 'company', ['owner_fk'], unique=False)
    op.create_table('university',
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('admin_fk', sa.Integer(), nullable=True),
    sa.Column('contacts_fk', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['admin_fk'], ['account.id'], name=op.f('fk_university_admin_fk_account'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['contacts_fk'], ['contacts.id'], name=op.f('fk_university_contacts_fk_contacts'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_university'))
    )
    op.create_index(op.f('ix_university_admin_fk'), 'university', ['admin_fk'], unique=False)
    op.create_index(op.f('ix_university_contacts_fk'), 'university', ['contacts_fk'], unique=True)
    op.create_table('university_request',
    sa.Column('speciality', sa.VARCHAR(), nullable=True),
    sa.Column('group_size', sa.Integer(), nullable=True),
    sa.Column('period', sa.Integer(), nullable=True),
    sa.Column('university_fk', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['university_fk'], ['university.id'], name=op.f('fk_university_request_university_fk_university'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_university_request'))
    )
    op.create_index(op.f('ix_university_request_university_fk'), 'university_request', ['university_fk'], unique=False)
    op.create_table('vacancy',
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('company_fk', sa.Integer(), nullable=False),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('adress', sa.Text(), nullable=True),
    sa.Column('specialty', sa.VARCHAR(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['company_fk'], ['company.id'], name=op.f('fk_vacancy_company_fk_company'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_vacancy'))
    )
    op.create_index(op.f('ix_vacancy_company_fk'), 'vacancy', ['company_fk'], unique=False)
    op.create_table('response',
    sa.Column('vacancy_fk', sa.Integer(), nullable=False),
    sa.Column('resume_url', sa.Text(), nullable=True),
    sa.Column('first_name', sa.VARCHAR(), nullable=True),
    sa.Column('second_name', sa.VARCHAR(), nullable=True),
    sa.Column('surname', sa.VARCHAR(), nullable=True),
    sa.Column('contacts_fk', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'APPROVED', 'REJECTED', name='response_status_enum', native_enum=False), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.ForeignKeyConstraint(['contacts_fk'], ['contacts.id'], name=op.f('fk_response_contacts_fk_contacts'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['vacancy_fk'], ['vacancy.id'], name=op.f('fk_response_vacancy_fk_vacancy'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_response'))
    )
    op.create_index(op.f('ix_response_contacts_fk'), 'response', ['contacts_fk'], unique=True)
    op.create_index(op.f('ix_response_vacancy_fk'), 'response', ['vacancy_fk'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_response_vacancy_fk'), table_name='response')
    op.drop_index(op.f('ix_response_contacts_fk'), table_name='response')
    op.drop_table('response')
    op.drop_index(op.f('ix_vacancy_company_fk'), table_name='vacancy')
    op.drop_table('vacancy')
    op.drop_index(op.f('ix_university_request_university_fk'), table_name='university_request')
    op.drop_table('university_request')
    op.drop_index(op.f('ix_university_contacts_fk'), table_name='university')
    op.drop_index(op.f('ix_university_admin_fk'), table_name='university')
    op.drop_table('university')
    op.drop_index(op.f('ix_company_owner_fk'), table_name='company')
    op.drop_index(op.f('ix_company_contacts_fk'), table_name='company')
    op.drop_table('company')
    op.drop_table('contacts')
    op.drop_table('account')
    # ### end Alembic commands ###
